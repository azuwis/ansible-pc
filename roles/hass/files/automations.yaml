- id: button_1_single
  alias: Button single
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/button_1
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.click == 'single' }}
  action:
    service: light.toggle
    data:
      entity_id: light.living_room

- id: button_1_double
  alias: Button double
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/button_1
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.click == 'double' }}
  action:
    service: media_player.toggle
    data:
      entity_id: media_player.tv

- id: button_1_long
  alias: Button long
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/button_1
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.click == 'long' }}
  action:
    service: switch.toggle
    data:
      entity_id: switch.reading_living_room

- id: climate_bedroom_auto_off
  alias: Climate bedroom auto off
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    to: 'on'
    for: '00:02:00'
  action:
    service: climate.set_operation_mode
    data:
      entity_id: climate.bedroom
      operation_mode: 'off'

- id: climate_bedroom_auto_cool
  alias: Climate bedroom auto cool
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    to: 'off'
    for: '00:00:10'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.ht_bedroom_temperature
        above: 26.5
      - condition: numeric_state
        entity_id: sensor.ht_outside_temperature
        above: 26.5
  action:
    service: climate.set_operation_mode
    data:
      entity_id: climate.bedroom
      operation_mode: cool

# - id: cube_flip90
#   alias: Cube flip90
#   trigger:
#     platform: mqtt
#     topic: zigbee2mqtt/cube
#   condition:
#     condition: template
#     value_template: >-
#       {{ trigger.payload_json.action == 'flip90' }}
#   action:
#     service: xiaomi_aqara.play_ringtone
#     data:
#       gw_mac: !secret ac_partner_mac
#       ringtone_id: 10
#       ringtone_vol: 50

# - id: cube_rotate_left
#   alias: Cube rotate left
#   trigger:
#     platform: mqtt
#     topic: zigbee2mqtt/cube
#   condition:
#     condition: template
#     value_template: >-
#       {{ trigger.payload_json.action == 'rotate_left' }}
#   action:
#     service: light.turn_on
#     entity_id: light.living_room
#     data_template:
#       brightness: >-
#         {{ states.light.living_room.attributes.brightness - 50 }}

# - id: cube_rotate_right
#   alias: Cube rotate right
#   trigger:
#     platform: mqtt
#     topic: zigbee2mqtt/cube
#   condition:
#     condition: template
#     value_template: >-
#       {{ trigger.payload_json.action == 'rotate_right' }}
#   action:
#     service: light.turn_on
#     entity_id: light.living_room
#     data_template:
#       brightness: >-
#         {{ states.light.living_room.attributes.brightness + 50 }}

- id: flux_living_room_light_on
  alias: Flux living room light on
  trigger:
    platform: state
    entity_id: light.living_room
    to: 'on'
  condition:
    condition: time
    after: '7:00'
    before: '23:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.flux_living_room

- id: flux_living_room_hass_started
  alias: Flux living room hass started
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: time
    after: '22:00'
    before: '17:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.flux_living_room

# - id: nightlight_bedroom_auto_off
#   alias: Nightlight bedroom auto off
#   trigger:
#     platform: state
#     entity_id: binary_sensor.motion_bedroom
#     to: 'off'
#     for: '00:30:00'
#   action:
#     service: switch.turn_off
#     data:
#       entity_id: switch.plug_switch

# - id: nightlight_bedroom_auto_on
#   alias: Nightlight bedroom auto on
#   trigger:
#     platform: state
#     entity_id: binary_sensor.motion_bedroom
#     to: 'on'
#   condition:
#     condition: and
#     conditions:
#       - condition: sun
#         after: sunset
#   action:
#     service: switch.turn_on
#     data:
#       entity_id: switch.plug_switch

- id: theme_custom
  alias: Set custom theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: custom

- id: water_heater
  alias: Water heater
  trigger:
    platform: sun
    event: sunset
    offset: '-00:30:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.water_heater

- id: water_heater_season
  alias: Water heater season
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: template
    value_template: >-
      {{ not is_state('sensor.season', 'summer')  }}
  action:
    service: switch.turn_on
    data:
      entity_id: switch.water_heater

- id: notify_home
  alias: Notify home
  trigger:
    platform: state
    entity_id:
      - device_tracker.owntracks_2
    from: not_home
    to: home
  condition:
    condition: time
    after: '8:00'
    before: '21:00'
  action:
    service: notify.html5
    data_template:
      message: >-
        {{ state_attr(trigger.entity_id, 'friendly_name') }} arrived home
